@charset "UTF-8";

/* Media queries */
@mixin mq($mq-breakpoint) {
  @if map-has-key($MQ_BREAKPOINTS, $mq-breakpoint) {

    $mq-range: "min";
    @if $mq-breakpoint == nth(map-keys($MQ_BREAKPOINTS), 1) {
      $mq-range: "max";
    }

    @media all and (#{$mq-range}-width: map-get($MQ_BREAKPOINTS, $mq-breakpoint)) {
      @content;
    }
  }
}

/* Container */
@mixin container {
  margin-right: auto;
  margin-left: auto;
  width: 100%;

  @each $mq-container-width in $MQ_CONTAINER_WIDTHS {
    $mq: nth($mq-container-width, 1);
    $container-width: nth($mq-container-width, 2);

    @include mq($mq) {
      max-width: $container-width;
    }
  }

  @each $mq-container-indent in $MQ_CONTAINER_INDENTS {
    $mq: nth($mq-container-indent, 1);
    $container-indent: nth($mq-container-indent, 2);

    @include mq($mq) {
      padding-right: $container-indent;
      padding-left: $container-indent;
    }
  }
}

/* Grid */
@mixin grid($main-axis: x, $justify-content: flex-start, $align-items: flex-start, $multiplier: 1, $mq-grid-gutters: $MQ_GRID_GUTTERS) {
  display: flex;
  justify-content: $justify-content;
  align-items: $align-items;

  @if $main-axis == x {
    flex-flow: row wrap;
  }

  @if $main-axis == y {
    flex-flow: column nowrap;
  }

  @each $mq-grid-gutter in $mq-grid-gutters {
    $mq: nth($mq-grid-gutter, 1);
    $gutter: -#{nth($mq-grid-gutter, 2) / 2 * $multiplier};

    @include mq($mq) {
      margin-right: $gutter;
      margin-left: $gutter;
    }
  }
}

@mixin grid-menu {
  @each $mq-grid-gutter in $MQ_GRID_GUTTERS {
    $mq: nth($mq-grid-gutter, 1);
    $gutter: -#{nth($mq-grid-gutter, 2)};

    @include mq($mq) {
      margin-right: $gutter;
      margin-left: $gutter;
    }
  }
}

/* Grid col */
@mixin grid-col($multiplier: 1, $mq-grid-gutters: $MQ_GRID_GUTTERS) {
  @each $mq-grid-gutter in $mq-grid-gutters {
    $mq: nth($mq-grid-gutter, 1);
    $gutter: nth($mq-grid-gutter, 2) / 2 * $multiplier;

    @include mq($mq) {
      padding-right: $gutter;
      padding-left: $gutter;
    }
  }
}

/* Col size */
@mixin col-size($size) {
  width: $size * 100%;
}

/* Col center */
@mixin col-center {
  margin-right: auto;
  margin-left: auto;
}

/* Font */
@mixin font($font-size, $line-height: 1.15) {
  font-size: $font-size;
  line-height: $line-height;
}

/* Text */
@mixin text-lg {
  @include font(2.2rem, 2.6rem);
}

@mixin text-md {
  @include font(1.8rem, 2.7rem);
}

@mixin text-normal {
  @include font(1.5rem, 2rem);
}

@mixin text-sm {
  @include font(1.2rem, 1.6rem);
}

@mixin text-btn {
  @include text-normal;
  //@include font(1.4rem, 1.6rem);
  //text-transform: uppercase;
  font-weight: bold;
  letter-spacing: $LETTER_SPACING;
}

@mixin text-tag {
  @include font(1.4rem, 1.6rem);
  text-transform: uppercase;
  font-weight: 300;
  letter-spacing: $LETTER_SPACING;
}

@mixin ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

/* Headings */
// Headings
@mixin h {
  font-family: $FONT_FAMILY;

  a {
    text-decoration: none;
  }
}

@mixin h1($font-weight: $FONT_WEIGHT_TITLE) {
  @include h;
  @include font(2.7rem, 3.3rem);
  margin: 2rem 0;

  @include mq(md) {
    @include font(4rem, 4.8rem);
    margin: 3rem 0;
  }
  font-weight: $font-weight;
}

@mixin h2($font-weight: $FONT_WEIGHT_TITLE) {
  @include h;
  @include font(2.7rem, 3.3rem);

  @include mq(md) {
    @include font(3.6rem, 4.4rem);
  }

  font-weight: $font-weight;
}

@mixin h3($font-weight: $FONT_WEIGHT_TITLE) {
  @include h;
  @include font(2rem, 2.6rem);

  @include mq(md) {
    @include font(2.7rem, 3.3rem);
  }

  font-weight: $font-weight;
}

@mixin h4($font-weight: $FONT_WEIGHT_TITLE) {
  @include h;
  @include font(2rem, 2.6rem);

  font-weight: $font-weight;
}

/* Links */
@mixin link {
  @include text-md;
  text-decoration: none;
  transition: all $TRANSITION_DURATION;
}

@mixin link-main {
  @include link;

  color: $COLOR_LINK;
  &:hover,
  &:active {
    color: $COLOR_LINK;
    text-decoration: underline;
  }
}